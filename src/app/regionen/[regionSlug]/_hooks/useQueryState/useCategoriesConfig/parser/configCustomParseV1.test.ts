import { describe, expect, test } from 'vitest'
import { createFreshCategoriesConfig } from '../createFreshCategoriesConfig'
import { MapDataCategoryId } from '../../../../_mapData/mapDataCategories/categories.const'
import { configCustomParse } from './configCustomParse'

describe('config param parser v1', () => {
  const themes = [
    // The order here specifies the order in the UI
    'poi',
    'bikelanes',
    'roads',
  ] satisfies MapDataCategoryId[]
  const freshConfig = createFreshCategoriesConfig(themes)

  // We removed the v1 logic in commit 7f557e9f
  // So now it is just supposed to fall back to a initial config
  describe('handle legacy v1 input', () => {
    test('A v1 config param returns a unmodified freshConfig', () => {
      const inputV1 =
        'W3siaWQiOiJmcm9tVG8iLCJhY3RpdmUiOnRydWUsInRvcGljcyI6W3siaWQiOiJzaG9wcyIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOmZhbHNlfSx7ImlkIjoiZGVmYXVsdCIsImFjdGl2ZSI6dHJ1ZX1dfSx7ImlkIjoiZWR1Y2F0aW9uIiwic3R5bGVzIjpbeyJpZCI6ImhpZGRlbiIsImFjdGl2ZSI6dHJ1ZX0seyJpZCI6ImRlZmF1bHQiLCJhY3RpdmUiOmZhbHNlfV19LHsiaWQiOiJwbGFjZXMiLCJzdHlsZXMiOlt7ImlkIjoiaGlkZGVuIiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6ImRlZmF1bHQiLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJjaXJjbGUiLCJhY3RpdmUiOmZhbHNlfV19LHsiaWQiOiJidWlsZGluZ3MiLCJzdHlsZXMiOlt7ImlkIjoiaGlkZGVuIiwiYWN0aXZlIjp0cnVlfSx7ImlkIjoiZGVmYXVsdCIsImFjdGl2ZSI6ZmFsc2V9XX0seyJpZCI6ImxhbmR1c2UiLCJzdHlsZXMiOlt7ImlkIjoiaGlkZGVuIiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6ImRlZmF1bHQiLCJhY3RpdmUiOnRydWV9XX0seyJpZCI6ImJhcnJpZXJzIiwic3R5bGVzIjpbeyJpZCI6ImhpZGRlbiIsImFjdGl2ZSI6ZmFsc2V9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjp0cnVlfV19LHsiaWQiOiJib3VuZGFyaWVzIiwic3R5bGVzIjpbeyJpZCI6ImhpZGRlbiIsImFjdGl2ZSI6dHJ1ZX0seyJpZCI6ImRlZmF1bHQiLCJhY3RpdmUiOmZhbHNlfSx7ImlkIjoibGV2ZWwtOCIsImFjdGl2ZSI6ZmFsc2V9LHsiaWQiOiJsZXZlbC05LTEwIiwiYWN0aXZlIjpmYWxzZX1dfV19LHsiaWQiOiJiaWtlbGFuZXMiLCJhY3RpdmUiOnRydWUsInRvcGljcyI6W3siaWQiOiJiaWtlbGFuZXMiLCJzdHlsZXMiOlt7ImlkIjoiaGlkZGVuIiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6ImRlZmF1bHQiLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJ2ZXJpZmljYXRpb24iLCJhY3RpdmUiOmZhbHNlfSx7ImlkIjoiY29tcGxldGVuZXNzIiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6ImJpa2VsYW5lX29uZXdheV9hcnJvd3MiLCJhY3RpdmUiOmZhbHNlfV19LHsiaWQiOiJiaWtlbGFuZXNQcmVzZW5jZV9sZWdhY3kiLCJzdHlsZXMiOlt7ImlkIjoiaGlkZGVuIiwiYWN0aXZlIjp0cnVlfSx7ImlkIjoiZGVmYXVsdCIsImFjdGl2ZSI6ZmFsc2V9XX0seyJpZCI6InRyYWZmaWNTaWducyIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjpmYWxzZX1dfSx7ImlkIjoicGxhY2VzIiwic3R5bGVzIjpbeyJpZCI6ImhpZGRlbiIsImFjdGl2ZSI6ZmFsc2V9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjp0cnVlfSx7ImlkIjoiY2lyY2xlIiwiYWN0aXZlIjpmYWxzZX1dfSx7ImlkIjoibGFuZHVzZSIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjpmYWxzZX1dfV19LHsiaWQiOiJyb2FkQ2xhc3NpZmljYXRpb24iLCJhY3RpdmUiOmZhbHNlLCJ0b3BpY3MiOlt7ImlkIjoicm9hZENsYXNzaWZpY2F0aW9uX2xlZ2FjeSIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOmZhbHNlfSx7ImlkIjoiZGVmYXVsdCIsImFjdGl2ZSI6dHJ1ZX0seyJpZCI6Im9uZXdheSIsImFjdGl2ZSI6ZmFsc2V9XX0seyJpZCI6ImJpa2VsYW5lcyIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6InZlcmlmaWNhdGlvbiIsImFjdGl2ZSI6ZmFsc2V9LHsiaWQiOiJjb21wbGV0ZW5lc3MiLCJhY3RpdmUiOmZhbHNlfSx7ImlkIjoiYmlrZWxhbmVfb25ld2F5X2Fycm93cyIsImFjdGl2ZSI6ZmFsc2V9XX0seyJpZCI6Im1heHNwZWVkX2xlZ2FjeSIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6ImRldGFpbHMiLCJhY3RpdmUiOmZhbHNlfV19LHsiaWQiOiJzdXJmYWNlUXVhbGl0eV9sZWdhY3kiLCJzdHlsZXMiOlt7ImlkIjoiaGlkZGVuIiwiYWN0aXZlIjp0cnVlfSx7ImlkIjoiZGVmYXVsdCIsImFjdGl2ZSI6ZmFsc2V9LHsiaWQiOiJiYWQiLCJhY3RpdmUiOmZhbHNlfSx7ImlkIjoiY29tcGxldGVuZXNzIiwiYWN0aXZlIjpmYWxzZX0seyJpZCI6ImZyZXNobmVzcyIsImFjdGl2ZSI6ZmFsc2V9XX0seyJpZCI6InRyYWZmaWNTaWducyIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjpmYWxzZX1dfSx7ImlkIjoicGxhY2VzIiwic3R5bGVzIjpbeyJpZCI6ImhpZGRlbiIsImFjdGl2ZSI6ZmFsc2V9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjp0cnVlfSx7ImlkIjoiY2lyY2xlIiwiYWN0aXZlIjpmYWxzZX1dfSx7ImlkIjoibGFuZHVzZSIsInN0eWxlcyI6W3siaWQiOiJoaWRkZW4iLCJhY3RpdmUiOnRydWV9LHsiaWQiOiJkZWZhdWx0IiwiYWN0aXZlIjpmYWxzZX1dfV19XQ'
      const result = configCustomParse(inputV1, freshConfig)
      expect(result).toMatchObject(freshConfig)
    })
  })
})
