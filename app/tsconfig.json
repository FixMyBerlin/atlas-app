{
  "compilerOptions": {
    "target": "es2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    // We used to hav only `baseUrl` without `paths` and use the Vitest `vite-tsconfig-paths` plugin
    // That broke with Vitest 2. Just using the `paths` fixes this.
    // However, that breaks our bun scripts like updateStaticDatasets.
    // So now we have both but all imports use the `paths` syntax.
    "baseUrl": "./",
    "paths": {
      "@/*": ["./*"]
    },
    "allowJs": true,
    "skipLibCheck": true,
    "strict": false,
    "strictNullChecks": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "noUncheckedIndexedAccess": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "tsBuildInfoFile": ".tsbuildinfo",
    "noErrorTruncation": true, // https://stackoverflow.com/a/53131824
    "types": [
      "bun-types", // We use bun.sh for our scripts
      "web" // Once we add bun-types, "lib":["dom"] is not enough, see https://github.com/oven-sh/bun/issues/3030#issuecomment-1712671248
    ],
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "exclude": [
    "node_modules",
    "**/*.e2e.ts",
    "cypress",
    ".next",
    "processing",
    "warm-cache",
    "cache",
    "configs"
  ],
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", "types", ".next/types/**/*.ts"]
}
