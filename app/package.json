{
  "name": "atlas-app",
  "version": "0.2.0",
  "author": "FixMyCity <hello@fixmycity.de>",
  "license": "AGPL-3.0",
  "private": true,
  "engines": {
    "node": ">=20.0.0 <21.0.0"
  },
  "scripts": {
    "start": "npx blitz@2.2.2 start --hostname 127.0.0.1 --port 4000",
    "dev": "npx blitz@2.2.2 dev --hostname 127.0.0.1 --port 5173",
    "predev": "cp -f ../.env ./ && npm run predev:check_docker && npm run predev:check_migration",
    "predev:check_docker": "if [ \"$(docker inspect -f '{{.State.Running}}' db)\" != \"true\" ]; then docker compose -f ../docker-compose.yml up db tiles -d; fi",
    "predev:check_migration": "node scripts/CheckMigrations/check.js",
    "build": "npx blitz@2.2.2 build",
    "bleach": "rm -rf node_modules/ && rm -rf .next/ && npm install",
    "bleach:full": "rm package-lock.json && npm run bleach",
    "docker:cleanup": "docker system prune --force --all --volumes && docker builder prune --all --force",
    "studio": "npx blitz@2.2.2 prisma studio",
    "openTypes": "code \"node_modules/.prisma/client/index.d.ts\"",
    "migrate": "npx blitz@2.2.2 prisma migrate dev",
    "migrate:create": "npx blitz@2.2.2 prisma migrate dev --create-only && npm run migrate:create:openMigration",
    "migrate:create:openMigration": "code $(find ./db/migrations -type f -name \"migration.sql\" -cmin -1 | head -n 1)",
    "migrate:check": "npx blitz@2.2.2 prisma migrate status",
    "migrate:compare": "git diff origin/main... -- db/migrations",
    "seed": "npm run predev && npm run migrate && npx blitz@2.2.2 prisma migrate reset && npx blitz@2.2.2 db seed",
    "type-check": "tsc --noEmit",
    "lint": "next lint",
    "format": "prettier --ignore-path .gitignore \"(src|mailers)/**/*.+(ts|js|tsx|md)\" --write",
    "save-configs": "bun \"src/app/regionen/[regionSlug]/_hooks/useQueryState/useCategoriesConfig/v2/saveConfigs.ts\" && prettier --write \"src/**/v2/configs/index.ts\" \"src/**/v2/configs/*.ts\"",
    "test": "vitest watch",
    "test:run": "vitest run --passWithNoTests",
    "test:ui": "vitest --ui",
    "coverage": "vitest run --coverage",
    "check": "npm run type-check && npm run lint && npm run format && npm run test:run",
    "MapboxStyles:update": "bun ./scripts/MapboxStyles/process.ts && npm run lint -- --fix && prettier \"src/app/regionen/[regionSlug]/_mapData/mapDataSubcategories/mapboxStyles\" --write && github",
    "StaticDatasets:link": "ln -s ../../../../atlas-static-data/geojson scripts/StaticDatasets",
    "StaticDatasets:update:help": "echo \"(i) Use --dry-run to test but not publish\n(i) Use --keep-tmp to inspect the processed files\n(i) Use --folder-filter=FOO to only upload folder/files with this term\"",
    "StaticDatasets:update:dev": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.development ./scripts/StaticDatasets/updateStaticDatasets.ts --folder-filter=",
    "StaticDatasets:update:staging": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.staging ./scripts/StaticDatasets/updateStaticDatasets.ts --folder-filter=",
    "StaticDatasets:update:production": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.production ./scripts/StaticDatasets/updateStaticDatasets.ts --folder-filter=",
    "StaticDatasets:updateWfsSources": "bun --env-file=.env ./scripts/StaticDatasets/updateWfsSources.ts --folder-filter=",
    "StaticDatasets:deleteAll:dev": "echo \"Reminder: We cannot use this on staging, production, see https://github.com/FixMyBerlin/private-issues/issues/2283\" && bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.development ./scripts/StaticDatasets/deleteAllStaticDatasets.ts",
    "RegionalMasks:update": "npm run RegionalMasks:update:createGeojson && npm run RegionalMasks:update:createPmtiles && npm run RegionalMasks:update:upload && github",
    "RegionalMasks:update:createGeojson": "bun ./scripts/RegionalMasks/createGeojson.ts && prettier \"scripts/RegionalMasks/geojson/\" --write",
    "RegionalMasks:update:createPmtiles": "bun ./scripts/RegionalMasks/createPmtiles.ts",
    "RegionalMasks:update:upload": "bun ./scripts/RegionalMasks/upload.ts",
    "MapboxTilesets:update": "bun ./scripts/MapboxTilesets/process.ts",
    "MaprouletteCreate": "bun run scripts/MaprouletteCreate/process.ts",
    "MaprouletteRebuild": "bun run scripts/MaprouletteRebuild/process.ts",
    "Maproulette:help": "echo -e '\\033[0;32m Help: Use `npm run MaprouletteCreate -- --filter FOOBAR` \\033[0m' && echo -e '\\033[0;32m Rebuild: Use `npm run MaprouletteRebuild -- --filter FOOBAR` \\033[0m'",
    "updatePackages:major": "npx taze major --includeLocked --write --exclude eslint,minimatch && npm run updatePackages:minor && npm install",
    "updatePackages:minor": "npx taze minor --includeLocked --write && npm install",
    "release": "gh pr create --base main --head develop --title \"Release $(date '+%Y-%m-%d')\" --body \"\"",
    "prepare": "cd .. && husky app/.husky",
    "postinstall": "patch-package"
  },
  "prisma": {
    "schema": "db/schema.prisma"
  },
  "browserslist": [
    "defaults",
    "last 2 IE major versions",
    "last 4 Edge major versions"
  ],
  "dependencies": {
    "@blitzjs/auth": "2.2.2",
    "@blitzjs/next": "2.2.2",
    "@blitzjs/rpc": "2.2.2",
    "@headlessui/react": "2.2.1",
    "@hookform/error-message": "2.0.1",
    "@hookform/resolvers": "3.10.0",
    "@json2csv/plainjs": "7.0.6",
    "@mapbox/mapbox-gl-draw": "^1.5.0",
    "@maptiler/geocoding-control": "2.1.6",
    "@prisma/client": "5.22.0",
    "@tanstack/react-query": "5.72.2",
    "@turf/turf": "^7.2.0",
    "adler-32": "1.3.1",
    "ajv": "8.17.1",
    "blitz": "2.2.2",
    "date-fns": "4.1.0",
    "dompurify": "^3.2.5",
    "geojson": "0.5.0",
    "immer": "10.1.1",
    "js-cookie": "3.0.5",
    "jsts": "2.12.1",
    "jsurl2": "2.2.0",
    "lodash": "4.17.21",
    "maplibre-gl": "4.7.1",
    "next": "14.2.28",
    "next-auth": "4.24.11",
    "nuqs": "1.20.0",
    "pluralize": "8.0.0",
    "pmtiles": "3.2.1",
    "prisma": "5.22.0",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-hook-form": "7.55.0",
    "react-intl": "^6.8.9",
    "react-map-gl": "7.1.9",
    "react-remark": "^2.1.0",
    "secure-password": "4.0.0",
    "server-only": "0.0.1",
    "sharp": "0.33.5",
    "slugify": "1.6.6",
    "tailwind-merge": "3.2.0",
    "tiny-invariant": "^1.3.3",
    "use-resize-observer": "9.1.0",
    "zod": "3.24.2",
    "zustand": "^5.0.3"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "3.787.0",
    "@heroicons/react": "^2.2.0",
    "@next/bundle-analyzer": "14.2.28",
    "@next/env": "14.2.28",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@testing-library/jest-dom": "6.6.3",
    "@testing-library/react": "16.3.0",
    "@testing-library/react-hooks": "8.0.1",
    "@total-typescript/ts-reset": "0.6.1",
    "@types/dompurify": "^3.2.0",
    "@types/js-cookie": "3.0.6",
    "@types/jsurl2": "^2.1.4",
    "@types/lodash": "4.17.16",
    "@types/mapbox__mapbox-gl-draw": "^1.4.8",
    "@types/node": "20.17.30",
    "@types/pako": "2.0.3",
    "@types/preview-email": "3.1.0",
    "@types/react": "18.3.20",
    "@types/react-dom": "^18.3.6",
    "@types/spritesmith": "3.4.5",
    "@types/web": "0.0.172",
    "@typescript-eslint/eslint-plugin": "8.29.1",
    "@vitejs/plugin-react": "4.3.4",
    "@vitest/ui": "2.1.9",
    "autoprefixer": "^10.4.21",
    "bun-types": "1.2.9",
    "chalk": "^5.4.1",
    "eslint": "8.57.1",
    "eslint-config-next": "14.2.28",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-react-compiler": "19.0.0-beta-e993439-20250405",
    "husky": "9.1.7",
    "jsdom": "25.0.1",
    "minimatch": "9.0.5",
    "pako": "2.1.0",
    "papaparse": "5.5.2",
    "parse-gitignore": "2.0.0",
    "patch-package": "8.0.0",
    "postcss": "^8.5.3",
    "prettier": "3.5.3",
    "prettier-plugin-organize-imports": "4.1.0",
    "prettier-plugin-prisma": "5.0.0",
    "prettier-plugin-tailwindcss": "0.6.11",
    "preview-email": "3.1.0",
    "spritesmith": "3.5.1",
    "tailwindcss": "^3.4.17",
    "typescript": "^5.8.3",
    "use-changed-props": "0.1.0",
    "vitest": "2.1.9"
  }
}
