{
  "name": "atlas-app",
  "version": "0.2.0",
  "author": "FixMyCity <hello@fixmycity.de>",
  "license": "AGPL-3.0",
  "private": true,
  "engines": {
    "node": ">=18.0.0 <19.0.0"
  },
  "scripts": {
    "start": "npx blitz@2.0.10 start --hostname 127.0.0.1 --port 4000",
    "dev": "npx blitz@2.0.10 dev --hostname 127.0.0.1 --port 5173",
    "predev": "cp -f ../.env ./ && npm run predev:check_docker && npm run predev:check_migration",
    "predev:check_docker": "if [ \"$(docker inspect -f '{{.State.Running}}' db)\" != \"true\" ]; then docker compose -f ../docker-compose.yml up db tiles -d; fi",
    "predev:check_migration": "node scripts/npm-run-predev/checkMigrations.js",
    "build": "npx blitz@2.0.10 build",
    "bleach": "rm -rf node_modules/ && rm -rf .next/ && npm install",
    "bleach:full": "rm package-lock.json && npm run bleach",
    "docker:cleanup": "docker system prune --force --all --volumes",
    "studio": "npx blitz@2.0.10 prisma studio",
    "openTypes": "code \"node_modules/.prisma/client/index.d.ts\"",
    "migrate": "npx blitz@2.0.10 prisma migrate dev",
    "migrate:create": "npx blitz@2.0.10 prisma migrate dev --create-only && npm run migrate:create:openMigration",
    "migrate:create:openMigration": "code $(find ./db/migrations -type f -name \"migration.sql\" -cmin -1 | head -n 1)",
    "migrate:check": "npx blitz@2.0.10 prisma migrate status",
    "migrate:compare": "git diff origin/main... -- db/migrations",
    "seed": "npm run predev && npm run migrate && npx blitz@2.0.10 prisma migrate reset && npx blitz@2.0.10 db seed",
    "type-check": "tsc --noEmit",
    "lint": "next lint",
    "format": "prettier --ignore-path .gitignore \"(src|mailers)/**/*.+(ts|js|tsx|md)\" --write",
    "save-configs": "bun \"src/app/regionen/[regionSlug]/_hooks/useQueryState/useCategoriesConfig/v2/saveConfigs.ts\" && prettier --write \"src/**/v2/configs/index.ts\" \"src/**/v2/configs/*.ts\"",
    "test": "vitest watch",
    "test:run": "vitest run --passWithNoTests",
    "test:ui": "vitest --ui",
    "coverage": "vitest run --coverage",
    "check": "npm run type-check && npm run lint && npm run format && npm run test:run",
    "updateStyles": "bun ./scripts/MapboxStyles/process.ts && npm run lint -- --fix && prettier \"src/app/regionen/[regionSlug]/_mapData/mapDataSubcategories/mapboxStyles\" --write && github",
    "updateStaticDatasets:help": "echo \"(i) Use --dry-run to test but not publish\n(i) Use --keep-tmp to inspect the processed files\n(i) Use --folder-filter=FOO to only upload folder/files with this term\"",
    "updateStaticDatasets:dev": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.development ./scripts/StaticDatasets/updateStaticDatasets.ts",
    "updateStaticDatasets:staging": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.staging ./scripts/StaticDatasets/updateStaticDatasets.ts",
    "updateStaticDatasets:production": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.production ./scripts/StaticDatasets/updateStaticDatasets.ts",
    "deleteAllStaticDatasets:dev": "bun --env-file=.env --env-file=./scripts/StaticDatasets/.env.development ./scripts/StaticDatasets/deleteAllStaticDatasets.ts",
    "updateMasks": "npm run updateMasks:createGeojson && npm run updateMasks:createPmtiles && npm run updateMasks:upload && github",
    "updateMasks:createGeojson": "bun ./scripts/RegionalMasks/createGeojson.ts && prettier \"scripts/RegionalMasks/geojson/\" --write",
    "updateMasks:createPmtiles": "bun ./scripts/RegionalMasks/createPmtiles.ts",
    "updateMasks:upload": "bun ./scripts/RegionalMasks/upload.ts",
    "updateTilesets": "bun ./scripts/MapboxTilesets/process.ts",
    "updatePackages:major": "npx taze major --includeLocked --write --exclude eslint && npm run updatePackages:minor && npm install",
    "updatePackages:minor": "npx taze minor --includeLocked --write && npm install",
    "release": "gh pr create --base main --head develop --title \"Release $(date '+%Y-%m-%d')\" --body \"\"",
    "prepare": "cd .. && husky app/.husky",
    "postinstall": "patch-package",
    "link-atlas-static-data": "ln -s ../../../../atlas-static-data/geojson scripts/StaticDatasets"
  },
  "prisma": {
    "schema": "db/schema.prisma"
  },
  "dependencies": {
    "@blitzjs/auth": "2.0.10",
    "@blitzjs/next": "2.0.10",
    "@blitzjs/rpc": "2.0.10",
    "@headlessui/react": "2.1.2",
    "@hookform/error-message": "2.0.1",
    "@hookform/resolvers": "3.9.0",
    "@json2csv/plainjs": "7.0.6",
    "@mapbox/mapbox-gl-draw": "^1.4.3",
    "@popperjs/core": "^2.11.8",
    "@prisma/client": "5.17.0",
    "@tanstack/react-query": "5.51.11",
    "@turf/turf": "^6.5.0",
    "@types/js-cookie": "3.0.6",
    "@types/lodash": "4.17.7",
    "@types/mapbox__mapbox-gl-draw": "^1.4.6",
    "adler-32": "1.3.1",
    "ajv": "8.17.1",
    "blitz": "2.0.10",
    "dompurify": "^3.1.6",
    "eslint-plugin-react-compiler": "0.0.0-experimental-0998c1e-20240625",
    "geojson": "0.5.0",
    "immer": "10.1.1",
    "js-cookie": "3.0.5",
    "jsts": "2.11.3",
    "jsurl2": "2.2.0",
    "lodash": "4.17.21",
    "maplibre-gl": "4.5.0",
    "next": "14.2.5",
    "next-auth": "4.24.7",
    "nuqs": "1.17.5",
    "pluralize": "8.0.0",
    "pmtiles": "3.0.6",
    "prisma": "5.17.0",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "react-hook-form": "7.52.1",
    "react-intl": "^6.6.8",
    "react-map-gl": "7.1.7",
    "react-popper": "^2.3.0",
    "react-remark": "^2.1.0",
    "secure-password": "4.0.0",
    "server-only": "0.0.1",
    "sharp": "0.32.6",
    "slugify": "1.6.6",
    "tailwind-merge": "2.4.0",
    "tiny-invariant": "^1.3.3",
    "use-resize-observer": "9.1.0",
    "zod": "3.23.8",
    "zustand": "^4.5.4"
  },
  "devDependencies": {
    "@aws-sdk/client-s3": "3.617.0",
    "@heroicons/react": "^2.1.5",
    "@next/bundle-analyzer": "12.3.4",
    "@next/env": "13.5.6",
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.13",
    "@testing-library/jest-dom": "6.4.8",
    "@testing-library/react": "15.0.7",
    "@testing-library/react-hooks": "8.0.1",
    "@total-typescript/ts-reset": "0.5.1",
    "@types/dompurify": "^3.0.5",
    "@types/jsurl2": "^2.1.4",
    "@types/node": "18.19.41",
    "@types/pako": "2.0.3",
    "@types/preview-email": "2.0.1",
    "@types/react": "18.3.3",
    "@types/react-dom": "^18.3.0",
    "@types/spritesmith": "3.4.5",
    "@types/web": "0.0.147",
    "@typescript-eslint/eslint-plugin": "7.17.0",
    "@vitejs/plugin-react": "4.3.1",
    "@vitest/ui": "1.6.0",
    "autoprefixer": "^10.4.19",
    "bun-types": "1.1.20",
    "chalk": "^5.3.0",
    "eslint": "8.57.0",
    "eslint-config-next": "14.2.5",
    "eslint-config-prettier": "^9.1.0",
    "husky": "9.1.1",
    "jsdom": "24.1.1",
    "minimatch": "9.0.5",
    "pako": "2.1.0",
    "papaparse": "5.4.1",
    "parse-gitignore": "2.0.0",
    "patch-package": "8.0.0",
    "postcss": "^8.4.39",
    "prettier": "3.3.3",
    "prettier-plugin-prisma": "5.0.0",
    "prettier-plugin-tailwindcss": "0.5.14",
    "preview-email": "3.0.20",
    "spritesmith": "3.4.1",
    "tailwindcss": "^3.4.6",
    "typescript": "^5.5.4",
    "use-changed-props": "0.1.0",
    "vite-tsconfig-paths": "4.3.2",
    "vitest": "1.6.0"
  },
  "packageManager": "npm@10.8.3+sha512.d08425c8062f56d43bb8e84315864218af2492eb769e1f1ca40740f44e85bd148969382d651660363942e5909cb7ffcbef7ca0ae963ddc2c57a51243b4da8f56"
}
