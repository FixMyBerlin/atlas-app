version: "3"
services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    # Networking: See https://techoverflow.net/2021/06/11/how-to-fix-traefik-gateway-timeout-for-docker-services/ for network_mode
    restart: unless-stopped
    command:
      - "--log.level=WARN"
      - "--api.insecure=false"
      - "--api.dashboard=false"
      - "--providers.docker=true"
      # Do not expose containers unless explicitly told so
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=dev-team@fixmycity.de"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--serversTransport.forwardingTimeouts.dialTimeout=100s"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./letsencrypt:/letsencrypt"
    networks:
      - app_bridge
  app:
    image: public.ecr.aws/n0p8j4k5/atlas/app:${GITHUB_SHA}
    entrypoint: /app/run.sh
    container_name: app
    environment:
      PGHOST:
      PGDATABASE:
      PGUSER:
      PGPASSWORD:
      OSM_DOWNLOAD_URL:
      SKIP_DOWNLOAD:
      SKIP_TAG_FILTER:
      DEBUG:
      ID_FILTER:
      API_SECRET:
      ENVIRONMENT:
      SYNOLOGY_LOG_TOKEN:
      SYNOLOGY_ERROR_LOG_TOKEN:
    volumes:
      - osmfiles:/data
    networks:
      - app_bridge
    depends_on:
      db:
        condition: service_healthy
  tiles:
    image: ghcr.io/maplibre/martin:v0.13.0
    container_name: tiles
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://${PGUSER}:${PGPASSWORD}@${PGHOST}/${PGDATABASE}
      RUST_LOG: RUST_LOG=actix_web=info,martin=info,tokio_postgres=info
    # bounds are optional in TileJSON spec
    # command: ["--auto-bounds=calc"]
    ports:
      - 3333:3000
    labels:
      - "traefik.enable=false"
    networks:
      - app_bridge
    depends_on:
      db:
       condition: service_healthy
  proxy:
    image: nginx:alpine
    restart: unless-stopped
    container_name: tiles_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tiles.rule=Host(`${TILES_URL}`)"
      - "traefik.http.routers.tiles.entrypoints=websecure"
      - "traefik.http.routers.tiles.tls.certresolver=letsencrypt"
      - "traefik.http.routers.tiles.tls=true"
    networks:
      - app_bridge
    ports:
      - "4444:80"
    volumes:
      - ./cache:/var/cache/nginx
      - ./logs:/var/log/nginx
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
    # Needs healty check for tiles server
    # depends_on:
    #   tiles:
    #     condition: service_healthy
  db:
    image: postgis/postgis:14-3.3-alpine
    container_name: db
    shm_size: 1gb
    restart: unless-stopped
    command: ["postgres", "-c", "shared_buffers=3GB", "-c", "work_mem=128MB", "-c", "maintenance_work_mem=1024MB", "-c", "temp_buffers=24MB", "-c", "effective_cache_size=8GB", "-c", "wal_buffers=16MB", "-c", "min_wal_size=1GB", "-c", "max_wal_size=4GB"]
    environment:
      PGUSER:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - geodata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${PGHOST} -d ${PGDATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_bridge
volumes:
  geodata:
  osmfiles:
networks:
  app_bridge:
