version: "3"
services:
  app:
    image: public.ecr.aws/n0p8j4k5/atlas/app:${GITHUB_SHA}
    entrypoint: /app/run.sh
    container_name: app
    environment:
      PGHOST:
      PGDATABASE:
      PGUSER:
      PGPASSWORD:
      OSM_DOWNLOAD_URL:
      SKIP_DOWNLOAD:
      SKIP_TAG_FILTER:
      DEBUG:
      ID_FILTER:
      API_SECRET:
      ENVIRONMENT:
      SYNOLOGY_LOG_TOKEN:
      SYNOLOGY_ERROR_LOG_TOKEN:
    volumes:
      - osmfiles:/data
    networks:
      - app_bridge
    depends_on:
      db:
        condition: service_healthy
  tiles:
    image: ghcr.io/maplibre/martin
    container_name: tiles
    restart: always
    environment:
      DATABASE_URL: postgres://${PGUSER}:${PGPASSWORD}@${PGHOST}/${PGDATABASE}
      DbPoolMaxConns: 25
      MaxFeaturesPerTile: 50000
      Debug: false
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tiles.rule=Host(`${TILES_URL}`)"
      - "traefik.http.routers.tiles.entrypoints=websecure"
      - "traefik.http.routers.tiles.tls.certresolver=letsencrypt"
      - "traefik.http.routers.tiles.tls=true"
    networks:
      - app_bridge
    depends_on:
      db:
        condition: service_healthy
  api:
    image: public.ecr.aws/n0p8j4k5/atlas/api:${GITHUB_SHA}
    container_name: api
    environment:
      PGHOST:
      PGDATABASE:
      PGUSER:
      PGPASSWORD:
      API_SECRET:
    restart: always
    ports:
      - "8020:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`${API_URL}`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.api.tls=true"
    networks:
      - app_bridge
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgis/postgis:14-3.3-alpine
    container_name: db
    shm_size: 1gb
    command: ["postgres", "-c", "shared_buffers=3GB", "-c", "work_mem=128MB", "-c", "maintenance_work_mem=1024MB", "-c", "temp_buffers=24MB", "-c", "effective_cache_size=8GB", "-c", "wal_buffers=16MB", "-c", "min_wal_size=1GB", "-c", "max_wal_size=4GB"]
    environment:
      PGUSER:
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - geodata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${PGHOST} -d ${PGDATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_bridge
volumes:
  geodata:
  osmfiles:
networks:
  app_bridge:
