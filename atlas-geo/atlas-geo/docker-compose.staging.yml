version: "3"
services:
  app_staging:
    env_file:
      - ./.env.staging
    image: public.ecr.aws/n0p8j4k5/atlas/app:${GITHUB_SHA}
    entrypoint: /app/run.sh
    container_name: app_staging
    environment:
      SKIP_DOWNLOAD: 0
      SKIP_TAG_FILTER: 0
      OSM_DOWNLOAD_URL: http://download.geofabrik.de/europe/germany-latest.osm.pbf
    volumes:
      - osmfiles_staging:/data
    networks:
      - app_staging_bridge
    depends_on:
      db_staging:
        condition: service_healthy
  tiles_staging:
    # There is no Apple M1 ARM 64 build, see https://github.com/CrunchyData/pg_tileserv/issues/127
    env_file:
      - ./.env.staging
    image: pramsey/pg_tileserv
    container_name: tiles_staging
    restart: always
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://${PGUSER}:${PGPASSWORD_ENCODED}@${PGHOST}/${PGDATABASE}
    ports:
      - "9010:7800"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stagingtiles.rule=Host(`staging-tiles.radverkehrsatlas.de`)"
      - "traefik.http.routers.stagingtiles.entrypoints=websecure"
      - "traefik.http.routers.stagingtiles.tls.certresolver=letsencrypt"
      - "traefik.http.routers.stagingtiles.tls=true"
    networks:
      - radverkehrsatlas_mesh
      - app_staging_bridge
    depends_on:
      db_staging:
        condition: service_healthy
  api_staging:
    env_file:
      - ./.env.staging
    container_name: api_staging
    restart: always
    image: public.ecr.aws/n0p8j4k5/atlas/api:${GITHUB_SHA}
    ports:
      - "9020:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.stagingapi.rule=Host(`staging-api.radverkehrsatlas.de`)"
      - "traefik.http.routers.stagingapi.entrypoints=websecure"
      - "traefik.http.routers.stagingapi.tls.certresolver=letsencrypt"
      - "traefik.http.routers.stagingapi.tls=true"
    networks:
      - radverkehrsatlas_mesh
      - app_staging_bridge
    depends_on:
      db_staging:
        condition: service_healthy
  db_staging:
      env_file:
        - ./.env.staging
      image: postgis/postgis:14-3.3-alpine
      environment:
        POSTGRES_DB: ${PGDATABASE}
        POSTGRES_USER: ${PGUSER}
        POSTGRES_PASSWORD: ${PGPASSWORD}
        POSTGRES_PORT: 5432
        LANG: en_US.UTF-8
        LC_ALL: en_US.UTF-8
      ports:
        - "5432:${PGPORT}"
      volumes:
        - geodata_staging:/var/lib/postgresql/data
        - ./postgres/postgres.conf:/etc/postgresql/postgresql.conf
      command: ["-c", "config_file=/etc/postgresql/postgresql.conf"]
      container_name: db_staging
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        - app_staging_bridge
volumes:
  osmfiles_staging:
  geodata_staging:
networks:
  radverkehrsatlas_mesh:
    external: true
  app_staging_bridge:
