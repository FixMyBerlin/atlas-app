package.path = package.path .. ";./app/process/shared/?.lua"
require('DeriveSmoothness')

print('=== Test DeriveSmoothness: surface "nil" returns "nil" ===')
local value, source, confidence, todo = DeriveSmoothness({})
assert(value == nil)
assert(source == nil)
assert(confidence == nil)
-- assert(todo == "Please add surface=*")

print('=== Test DeriveSmoothness: surface "unknown_typo" returns "nil" ===')
local value, source, confidence, todo = DeriveSmoothness({surface="unknown_typo"})
assert(value == nil)
assert(source == nil)
assert(confidence == nil)
-- assert(todo ~= nil)

print('=== Test DeriveSmoothness: surface "dirt" returns "bad" ===')
local value, source, confidence, todo = DeriveSmoothness({surface="dirt"})
assert(value == "bad")
assert(source == "surface_to_smoothness")
assert(confidence == "medium")
-- assert(todo == nil)

print('=== Test DeriveSmoothness: surface weird value returns "bad" ===')
local value, source, confidence, todo = DeriveSmoothness({surface="sett;paving_stones;cobblestone:flattened"})
assert(value == "bad")
assert(source == "surface_to_smoothness")
assert(confidence == "medium")
-- assert(todo ~= nil)

print('=== Test DeriveSmoothness: smoothness precedence ===')
local value, source, confidence, todo = DeriveSmoothness({smoothness="good", surface="sett;paving_stones;cobblestone:flattened"})
assert(value == "good")
assert(source == "tag")
assert(confidence == "high")
-- assert(todo ~= nil)

print('=== Test DeriveSmoothness: MTB scale ===')
local value, source, confidence = DeriveSmoothness({smoothness="wierd value", ["mtb:scale"]="0+"})
assert(value == "bad")
assert(source == "MTB scale to smoothness")
assert(confidence == "medium")

print('=== Test DeriveSmoothness: MTB scale ===')
local value, source, confidence = DeriveSmoothness({tracktype="grade3", ["mtb:scale"]="0+"})
assert(value == "bad")
assert(source == "track type to smoothness")
assert(confidence == "medium")