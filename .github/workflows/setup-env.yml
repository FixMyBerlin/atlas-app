name: Setup Configuration
on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      TILES_URL:
        type: string
        required: true
      CACHELESS_URL:
        type: string
        required: true
      NEXT_PUBLIC_APP_ORIGIN:
        required: true
        type: string
      NEXT_PUBLIC_APP_ENV:
        required: true
        type: string
      NEXT_PUBLIC_OSM_API_URL:
        required: true
        type: string
      APP_URL:
        required: true
        type: string

jobs:
  setup_env:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.ENVIRONMENT }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "docker-compose.yml, docker-compose.network.yml, configs, .env.example, psql_shell.sh"
          target: "/srv"
          overwrite: true

      - name: Stop & Start container on Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "Updating `.env`"
            cd /srv
            sed -n '/^[^#].*=/s/^\([^=]*\)=.*/\1=/p' .env.example > .env
            rm .env.example
            sed -i \
              -e "s|^ENVIRONMENT=.*$|ENVIRONMENT='${{ inputs.ENVIRONMENT }}'|" \
              -e "s|^SYNOLOGY_LOG_TOKEN=.*$|SYNOLOGY_LOG_TOKEN='${{ secrets.SYNOLOGY_LOG_TOKEN }}'|" \
              -e "s|^SYNOLOGY_ERROR_LOG_TOKEN=.*$|SYNOLOGY_ERROR_LOG_TOKEN='${{ secrets.SYNOLOGY_ERROR_LOG_TOKEN }}'|" \
              -e "s|^DATABASE_HOST=.*$|DATABASE_HOST='${{ vars.DATABASE_HOST }}'|" \
              -e "s|^DATABASE_USER=.*$|DATABASE_USER='${{ secrets.DATABASE_USER }}'|" \
              -e "s|^DATABASE_PASSWORD=.*$|DATABASE_PASSWORD='${{ secrets.DATABASE_PASSWORD }}'|" \
              -e "s|^DATABASE_NAME=.*$|DATABASE_NAME='${{ secrets.DATABASE_NAME }}'|" \
              -e "s|^OSM_DOWNLOAD_URL=.*$|OSM_DOWNLOAD_URL='${{ vars.OSM_DOWNLOAD_URL }}'|" \
              -e "s|^TILES_URL=.*$|TILES_URL='${{ inputs.TILES_URL }}'|" \
              -e "s|^CACHELESS_URL=.*$|CACHELESS_URL='${{ inputs.CACHELESS_URL }}'|" \
              -e "s|^NEXT_PUBLIC_APP_ORIGIN=.*$|NEXT_PUBLIC_APP_ORIGIN='${{ inputs.NEXT_PUBLIC_APP_ORIGIN }}'|"\
              -e "s|^NEXT_PUBLIC_APP_ENV=.*$|NEXT_PUBLIC_APP_ENV='${{ inputs.NEXT_PUBLIC_APP_ENV }}'|" \
              -e "s|^APP_URL=.*$|APP_URL='${{ inputs.APP_URL }}'|" \
              -e "s|^SESSION_SECRET_KEY=.*$|SESSION_SECRET_KEY='${{ secrets.SESSION_SECRET_KEY }}'|" \
              -e "s|^OSM_CLIENT_ID=.*$|OSM_CLIENT_ID='${{ secrets.OSM_CLIENT_ID }}'|" \
              -e "s|^OSM_CLIENT_SECRET=.*$|OSM_CLIENT_SECRET='${{ secrets.OSM_CLIENT_SECRET }}'|" \
              -e "s|^NEXT_PUBLIC_OSM_API_URL=.*$|NEXT_PUBLIC_OSM_API_URL='${{ inputs.NEXT_PUBLIC_OSM_API_URL }}'|" \
              -e "s|^S3_KEY=.*$|S3_KEY='${{ secrets.S3_KEY }}'|" \
              -e "s|^S3_SECRET=.*$|S3_SECRET='${{ secrets.S3_SECRET }}'|" \
              -e "s|^S3_REGION=.*$|S3_REGION='${{ secrets.S3_REGION }}'|" \
              -e "s|^S3_BUCKET=.*$|S3_BUCKET='${{ secrets.S3_BUCKET }}'|" \
              -e "s|^ATLAS_API_KEY=.*$|ATLAS_API_KEY='${{ secrets.ATLAS_API_KEY }}'|" \
              -e "s|^MAPROULETTE_API_KEY=.*$|MAPROULETTE_API_KEY='${{ secrets.MAPROULETTE_API_KEY }}'|" \
              -e "s|^SYNOLOGY_URL=.*$|SYNOLOGY_URL='${{ secrets.SYNOLOGY_URL }}'|" \
              -e "s|^SKIP_DOWNLOAD=.*$|SKIP_DOWNLOAD='${{ vars.SKIP_DOWNLOAD }}'|" \
              -e "s|^SKIP_UNCHANGED=.*$|SKIP_UNCHANGED='${{ vars.SKIP_UNCHANGED }}'|" \
              -e "s|^COMPUTE_DIFFS=.*$|COMPUTE_DIFFS='${{ vars.COMPUTE_DIFFS }}'|" \
              .env
